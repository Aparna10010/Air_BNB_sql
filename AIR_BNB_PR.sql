USE AIRBNB_HOUSING;

SELECT COLUMN_NAME
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'AIRBNB_PROJECT';


SELECT * FROM AIRBNB_PROJECT;


--TOTAL LISTINGS PER NEIGHBORHOOD

SELECT 
     NEIGHBOURHOOD,
	 COUNT(*)AS TOTAL
FROM
    AIRBNB_PROJECT
GROUP BY 
    NEIGHBOURHOOD;

--AVERAGE PRICE PER ROOM TYPE

SELECT 
     ROOM_TYPE,
	 AVG(PRICE)AS AVG_PRICE
FROM
    AIRBNB_PROJECT
GROUP BY
    ROOM_TYPE;

--LISTINGS WITH PRICE ABOVE AVERAGE

SELECT * FROM AIRBNB_PROJECT
WHERE PRICE > (
           SELECT AVG(PRICE)
		   FROM AIRBNB_PROJECT
		);


--TOP 5 EXPENSIVE LISTINGS
SELECT 
     TOP 5 
	 PRICE,
	 NAME
FROM
     AIRBNB_PROJECT
GROUP BY
     NAME,
	 PRICE 
ORDER BY
     PRICE DESC;


--HOSTS WITH MORE THAN 5 LISTINGS

SELECT 
     HOST_ID,
	 HOST_NAME,
	 COUNT(ID)AS NUMBER_OF_LISTING
FROM
     AIRBNB_PROJECT
GROUP BY
     HOST_ID,
	 HOST_NAME
HAVING
    COUNT(ID) > 5;


--NEIGHBOURHOOD WITH MOST REVIEWS

SELECT 
     NEIGHBOURHOOD,
	 number_of_reviews
FROM 
    AIRBNB_PROJECT
WHERE
    number_of_reviews = (
	       SELECT MAX(NUMBER_OF_REVIEWS)
		   FROM AIRBNB_PROJECT
		);


--PRICE RANKING BY NEIGHBOURHOOD

SELECT 
     ID,
	 PRICE,
	 NEIGHBOURHOOD,
     RANK() OVER(PARTITION BY NEIGHBOURHOOD ORDER BY PRICE DESC)AS PRICE_RANKING
FROM
    AIRBNB_PROJECT;


--LISTINGS WITH THE MAXIMUM REVIEW PER ORDER

WITH MAX_REVIEW AS (
       SELECT 
	        NEIGHBOURHOOD,
			MAX(NUMBER_OF_REVIEWS)AS MAXREVIEW
		FROM
		    AIRBNB_PROJECT
		GROUP BY
		    NEIGHBOURHOOD
	)

SELECT 
     AP.NAME,
	 AP.NEIGHBOURHOOD,
	 AP.NUMBER_OF_REVIEWS
FROM 
     AIRBNB_PROJECT AS AP
JOIN
    MAX_REVIEW AS MR ON AP.neighbourhood = MR.neighbourhood
	AND AP.number_of_reviews = MR.MAXREVIEW;


--PERCENTAGE OF LISTINGS BY ROOM TYPE IN EACH NEIGHBOURHOOD:

SELECT
     NEIGHBOURHOOD,
	 ROOM_TYPE,
	 COUNT(ID) * 100.0 / SUM(COUNT(ID)) OVER(PARTITION BY NEIGHBOURHOOD)AS PERCENTAGE
FROM
    AIRBNB_PROJECT
GROUP BY
    NEIGHBOURHOOD,
	ROOM_TYPE;


--LISTING WITH THE ABOVE AVERAGE AVAILABILITY

SELECT 
      ID,
	  NAME,
	  availability_365
FROM 
     AIRBNB_PROJECT
WHERE availability_365 > (
        SELECT AVG(AVAILABILITY_365)
		FROM AIRBNB_PROJECT
	);

	SELECT * FROM AIRBNB_PROJECT
--LIST HOSTS WHO HAVE LISTINGS IN MULTIPLE NEIGHBOURHOOD GROUPS:

SELECT 
     HOST_ID,
	 HOST_NAME,
	 COUNT(DISTINCT neighbourhood_group)AS GROUP_COUNT
FROM 
     AIRBNB_PROJECT
GROUP BY
     HOST_ID,
	 HOST_NAME
HAVING
     COUNT(DISTINCT neighbourhood_group)> 1;


--ROOM TYPES AND THEIR MEDIAN PRICES

SELECT
     ROOM_TYPE,
	 PRICE,
	 PERCENTILE_CONT(0.5) WITHIN GROUP(ORDER BY PRICE)
	 OVER(PARTITION BY ROOM_TYPE)AS MEDIAN_PRICE
FROM
     AIRBNB_PROJECT
GROUP BY
     ROOM_TYPE,
	 PRICE;


--AVERAGE PRICE OF LISTINGS WITH THE MINIMUM NIGHTS > 30

SELECT 
     AVG(PRICE)AS AVG_PRICE
FROM
    AIRBNB_PROJECT
WHERE
	MINIMUM_NIGHTS > 30;


--PRICE TRENDS OVER TIME (MONTHLY)

SELECT 
     DATEPART(YEAR, LAST_REVIEW)AS YEAR_R,
	 DATEPART(MONTH,LAST_REVIEW)AS MONTH_R,
	 AVG(PRICE)AS AVG_PRICE
FROM
     AIRBNB_PROJECT
GROUP BY
     DATEPART(YEAR, LAST_REVIEW),
	 DATEPART(MONTH,LAST_REVIEW)
ORDER BY
     DATEPART(YEAR, LAST_REVIEW),
	 DATEPART(MONTH,LAST_REVIEW);


--TOP HOSTS BASED ON TOTAL REVIEWS PER MONTH:

SELECT 
     TOP 10 HOST_ID,
	 HOST_NAME,
	 DATEPART(MONTH,LAST_REVIEW)AS MONTH_R,
	 SUM(NUMBER_OF_REVIEWS)AS TOTAL_REVIEWS
FROM
     AIRBNB_PROJECT
GROUP BY
     HOST_ID,
	 HOST_NAME,
	 DATEPART(MONTH,LAST_REVIEW)
ORDER BY
     TOTAL_REVIEWS DESC,
	 MONTH_R;


--AVERAGE PRICE OF LISTINGS BY HOST WITH MOST LISTINGS :

SELECT 
     TOP 1 HOST_ID,
	 HOST_NAME,
	 COUNT(ID)AS NUMBER_OF_LISTING,
	 AVG(PRICE)AS AVG_PRICE
FROM
     AIRBNB_PROJECT
GROUP BY
     HOST_ID,
	 HOST_NAME
ORDER BY
     NUMBER_OF_LISTING DESC ;


--LISTINGS AVAILABLE FOR MORE THAN 300 DAYS :

SELECT 
     ID,
	 NAME,
	 AVAILABILITY_365
FROM
     AIRBNB_PROJECT
WHERE
     AVAILABILITY_365 > 300
ORDER BY
     AVAILABILITY_365 DESC;


--YEARLY AVERAGE PRICE TREND FOR DIFFERENT ROOM TYPE :

SELECT
     ROOM_TYPE,
	 DATEPART(YEAR,LAST_REVIEW)AS YEAR_R,
	 AVG(PRICE)AS AVG_PRICE
FROM
     AIRBNB_PROJECT
GROUP BY
     ROOM_TYPE,
	 DATEPART(YEAR,LAST_REVIEW)
ORDER BY
     ROOM_TYPE,
	 DATEPART(YEAR,LAST_REVIEW);


--TOP 5 MOST EXPENSIVE LISTINGS IN EACH NEIGHBOURHOOD:


WITH RankedListings AS (
    SELECT
        NEIGHBOURHOOD,
        NAME,
        PRICE,
        ROW_NUMBER() OVER(PARTITION BY NEIGHBOURHOOD ORDER BY PRICE DESC) AS RANKING
    FROM
        AIRBNB_PROJECT
)
SELECT
    NEIGHBOURHOOD,
    NAME,
    PRICE,
	RANKING
FROM
    RankedListings
WHERE
    RANKING <= 5
ORDER BY
    NEIGHBOURHOOD,
    PRICE DESC;


--FIND AVERAGE PRICE BY ROOM TYPE FOR EACH NEIGHBOURHOOD

SELECT
     ROOM_TYPE,
	 NEIGHBOURHOOD,
	 AVG(PRICE)AS AVG_PRICE
FROM
     AIRBNB_PROJECT
GROUP BY
     ROOM_TYPE,
	 NEIGHBOURHOOD;


--COUNT OF LISTINGS BY HOST

SELECT
     HOST_ID,
	 HOST_NAME,
	 COUNT(ID)AS 'COUNT OF LISTINGS'
FROM
     AIRBNB_PROJECT
GROUP BY
     HOST_ID,
	 HOST_NAME
ORDER BY 
     [COUNT OF LISTINGS] DESC;


--FIND ROOM TYPE WITH HIGHEST AVAILABILITY :

SELECT
     ROOM_TYPE,
	 MAX(AVAILABILITY_365) AS 'AVAILABILITY'
FROM
     AIRBNB_PROJECT
GROUP BY
     ROOM_TYPE
ORDER BY
     AVAILABILITY DESC;


--TOTAL REVENUE GENERATED BY EACH HOST

SELECT 
     HOST_ID,
	 HOST_NAME,
     SUM(PRICE * MINIMUM_NIGHTS)AS TOTAL_REVENUE 
FROM 
     AIRBNB_PROJECT
GROUP BY
     HOST_ID,
	 HOST_NAME
ORDER BY
     TOTAL_REVENUE DESC;



  
	




